[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.unit-tests]
command = "cargo"
args = ["test"]

[tasks.wit-test]
script_runner = "@duckscript"
script = """
rm -r test/wit
mkdir test/wit/deps/golem-llm
mkdir test/wit/deps/io
cp wit/golem-llm.wit test/wit/deps/golem-llm/golem-llm.wit
cp wit/deps/wasi:io/error.wit test/wit/deps/io/error.wit
cp wit/deps/wasi:io/poll.wit test/wit/deps/io/poll.wit
cp wit/deps/wasi:io/streams.wit test/wit/deps/io/streams.wit
cp wit/deps/wasi:io/world.wit test/wit/deps/io/world.wit
"""
[tasks.build-test-components]
dependencies = ["build"]
description = "Builds all test components with golem-cli"
install_crate = "cargo-binstall"
script = '''
cargo-binstall golem-cli@1.2.2-dev.11 --locked --force --no-confirm
cargo-binstall wac-cli --locked --force --no-confirm
cd test
golem-cli --version
golem-cli app clean
golem-cli app build -b anthropic-debug
golem-cli app clean
golem-cli app build -b grok-debug
golem-cli app clean
golem-cli app build -b openai-debug
golem-cli app clean
golem-cli app build -b openrouter-debug
golem-cli app clean
golem-cli app build -b ollama-debug
'''

[tasks.set-version]
description = "Sets the version in all Cargo.toml files to the value of the VERSION environment variable"
condition = { env_set = ["VERSION"] }
script = '''
grep -rl --include 'Cargo.toml' '0\.0\.0' | xargs sed -i "s/0\.0\.0/${VERSION}/g"
'''

[tasks.set-version.mac]
condition = { env_set = ["VERSION"] }
script = '''
grep -rl --include '.*Cargo\.toml' '0\.0\.0' | xargs sed -i "" "s/0\.0\.0/${VERSION}/g"
'''

[tasks.set-version.windows]
script_runner = "powershell"
script_extension = "ps1"
condition = { env_set = ["VERSION"] }
script = '''
$cargoFiles = Get-ChildItem . Cargo.toml -rec
foreach ($file in $cargoFiles)
{
    (Get-Content $file.PSPath) |
    Foreach-Object { $_ -replace "0.0.0", $Env:VERSION } |
    Set-Content $file.PSPath
}
'''
